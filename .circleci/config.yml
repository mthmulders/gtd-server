version: 2
jobs:
  build-java-8:
    docker:
      - image: circleci/openjdk:8-jdk
      - image: ubuntu:18.04
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
      - run:
          name: Run tests
          command: mvn verify sonar:sonar -Pmutation-testing
      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}
      - run:
          name: Save test results
          command: |
            mkdir -p ~/junit/
            find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/junit/ \;
            find . -type f -regex ".*/target/failsafe-reports/.*xml" -exec cp {} ~/junit/ \;
          when: always
      - run:
          name: Verify Debian package
          command: |
            docker run -v "$(pwd)/target/deb:/tmp/package" ubuntu:18.04 /bin/bash -c \
              "apt-get update && apt-get install -y openjdk-8-jre && dpkg -i /tmp/package/gtd*deb"

      - store_test_results:
          path: ~/junit
      - store_artifacts:
          destination: "packages/debian"
          path: "target/deb"

  build-java-11:
    docker:
      - image: circleci/openjdk:11-jdk
      - image: ubuntu:18.04
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
      - run:
          name: Run tests
          command: mvn verify sonar:sonar -Djava.version=11 -Pmutation-testing
      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}
      - run:
          name: Save test results
          command: |
            mkdir -p ~/junit/
            find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/junit/ \;
            find . -type f -regex ".*/target/failsafe-reports/.*xml" -exec cp {} ~/junit/ \;
          when: always
      - run:
          name: Verify Debian package
          command: |
            docker run -v "$(pwd)/target/deb:/tmp/package" ubuntu:18.04 /bin/bash -c \
              "apt-get update && apt-get install -y openjdk-11-jre && dpkg -i /tmp/package/gtd*deb"
      - store_test_results:
          path: ~/junit
      - store_artifacts:
          destination: "packages/debian"
          path: "target/deb"

workflows:
  version: 2
  build:
    jobs:
      - build-java-8
      - build-java-11