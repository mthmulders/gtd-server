<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.3.5.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.infosupport.training.reactjs</groupId>
	<artifactId>gtd-server</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>gtd-server</name>
	<description>Demo project for Spring Boot</description>

	<url>http://github.com/mthmulders/gtd-server</url>

	<scm>
		<connection>scm:git:https://github.com/mthmulders/gtd-server</connection>
		<developerConnection>scm:git:git://github.com/mthmulders/gtd-server</developerConnection>
	</scm>

	<issueManagement>
		<system>GitHub issues</system>
		<url>https://github.com/mthmulders/gtd-server/issues</url>
	</issueManagement>

	<licenses>
		<license>
			<name>MIT License</name>
			<url>https://choosealicense.com/licenses/mit/</url>
			<distribution>manual</distribution>
			<comments>
				A short and simple permissive license with conditions only requiring
				preservation of copyright and license notices.
			</comments>
		</license>
	</licenses>

	<properties>
		<java.version>1.8</java.version>

		<sonar.projectKey>mthmulders_gtd-server</sonar.projectKey>
		<sonar.organization>mthmulders-github</sonar.organization>
		<sonar.host.url>https://sonarcloud.io</sonar.host.url>

		<oracle.driver.version>19.3.0.0</oracle.driver.version>
		<openjdk.version>8</openjdk.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jdbc</artifactId>
		</dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
		<dependency>
			<groupId>org.liquibase</groupId>
			<artifactId>liquibase-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt</artifactId>
			<version>0.9.1</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>rest-assured</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>spring-mock-mvc</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.github.npathai</groupId>
			<artifactId>hamcrest-optional</artifactId>
			<version>2.0.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.awaitility</groupId>
			<artifactId>awaitility</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.module</groupId>
			<artifactId>jackson-module-jaxb-annotations</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<finalName>${project.artifactId}</finalName>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<excludes>
					<exclude>application-prod.yml</exclude>
				</excludes>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<executable>true</executable>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.vafer</groupId>
				<artifactId>jdeb</artifactId>
				<version>1.8</version>
				<configuration>
					<dataSet>
						<data>
							<type>file</type>
							<src>${project.basedir}/src/deb/gtd-server.conf</src>
							<dst>/opt/${project.artifactId}/${project.artifactId}.conf</dst>
						</data>
						<data>
							<type>file</type>
							<src>${project.build.directory}/${project.artifactId}.jar</src>
							<dst>/opt/${project.artifactId}/${project.artifactId}.jar</dst>
							<mapper>
								<type>perm</type>
								<filemode>755</filemode>
								<user>gtdapp</user>
								<group>gtdapp</group>
							</mapper>
						</data>
						<data>
							<type>file</type>
							<src>src/main/resources/application-prod.yml</src>
							<dst>/etc/gtd-server/application.yml</dst>
							<conffile>true</conffile>
							<mapper>
								<type>perm</type>
								<user>gtdapp</user>
								<group>gtdapp</group>
							</mapper>
						</data>
						<data>
							<type>link</type>
							<linkTarget>/opt/${project.artifactId}/${project.artifactId}.jar</linkTarget>
							<linkName>/etc/init.d/gtd-server</linkName>
							<symlink>true</symlink>
						</data>
					</dataSet>
					<deb>${project.build.directory}/deb/${project.artifactId}-${project.version}-java${openjdk.version}_all.deb</deb>
					<verbose>true</verbose>
				</configuration>
				<executions>
					<execution>
						<id>create-debian-package</id>
						<goals>
							<goal>jdeb</goal>
						</goals>
						<phase>package</phase>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>ci</id>
			<activation>
				<property>
					<name>env.CI</name>
					<value>true</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>0.8.6</version>
						<executions>
							<execution>
								<id>prepare-jacoco-agent</id>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
								<phase>test</phase>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>java-8</id>
			<activation>
				<jdk>8</jdk>
			</activation>
			<dependencies>
				<dependency>
					<groupId>com.oracle.ojdbc</groupId>
					<artifactId>ojdbc8</artifactId>
					<version>${oracle.driver.version}</version>
				</dependency>
			</dependencies>
		</profile>

		<profile>
			<id>java-11-up</id>
			<activation>
				<jdk>11</jdk>
			</activation>
			<properties>
				<java.version>11</java.version>
				<openjdk.version>11</openjdk.version>
			</properties>
			<dependencies>
				<!-- Database driver for Oracle Database is different for Java 10+ -->
				<dependency>
					<groupId>com.oracle.ojdbc</groupId>
					<artifactId>ojdbc10</artifactId>
					<version>${oracle.driver.version}</version>
				</dependency>
				<!--
					JJWT 0.9.1 depends some JAXB class for Base64 encoding/decoding.
					Later versions don't have this dependency.
				-->
				<dependency>
					<groupId>jakarta.xml.bind</groupId>
					<artifactId>jakarta.xml.bind-api</artifactId>
					<version>2.3.3</version>
				</dependency>
			</dependencies>
		</profile>

		<profile>
			<id>mutation-testing</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.pitest</groupId>
						<artifactId>pitest-maven</artifactId>
						<version>1.5.2</version>
						<configuration>
							<excludedTestClasses>
								<param>*IT</param>
							</excludedTestClasses>
							<targetClasses>
								<param>com.infosupport.training.reactjs.gtdserver*</param>
							</targetClasses>
						</configuration>
						<executions>
							<execution>
								<id>mutation-testing</id>
								<goals>
									<goal>mutationCoverage</goal>
								</goals>
								<phase>verify</phase>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
